## Author: Patrick Chang
# Test Script to test the multivariate Hawkes functions

#---------------------------------------------------------------------------

using Plots, LaTeXStrings
include("../Functions/Hawkes/Hawkes")

#---------------------------------------------------------------------------
## Testing the Functions

lambda0 = [0.016 0.016]
alpha = [0 0.023; 0.023 0]
beta = [0 0.11; 0.11 0]
T = 3600
## Simulation
# Intensity and Count process plots
t = simulateHawkes(lambda0, alpha, beta, T)
位1 = Intensity(1, t[1], t, lambda0, alpha, beta)
位2 = Intensity(2, t[2], t, lambda0, alpha, beta)

p1 = plot(t[1], 位1, xlims = (minimum([t[1]; t[2]]), maximum([t[1]; t[2]])))
title!(p1, "Intensity")
xlabel!(p1, "Time")
ylabel!(p1, L"\lambda_1 (t)")
p2 = plot(t[1], cumsum(repeat([1], length(t[1]))), linetype = :steppre, legend = :bottomright, xlims = (minimum([t[1]; t[2]]), maximum([t[1]; t[2]])))
title!(p2, "Count Process")
xlabel!(p2, "Time")
ylabel!(p2, L"N_1(t)")

p3 = plot(t[2], 位2, xlims = (minimum([t[1]; t[2]]), maximum([t[1]; t[2]])))
title!(p3, "Intensity")
xlabel!(p3, "Time")
ylabel!(p3, L"\lambda_2 (t)")
p4 = plot(t[2], cumsum(repeat([1], length(t[2]))), linetype = :steppre, legend = :bottomright, xlims = (minimum([t[1]; t[2]]), maximum([t[1]; t[2]])))
title!(p4, "Count Process")
xlabel!(p4, "Time")
ylabel!(p4, L"N_2(t)")

p5 = plot(p1, p2, p3, p4, layout = (2,2))
# savefig(p5, "Plots/Hawkes.pdf")

## Extracting the prices
T = 3600*42
t = simulateHawkes(lambda0, alpha, beta, T)
P = getPrices(100, t[1], t[2])

p6 = plot(P[2] .* (42/T), P[1], linetype = :steppost)
title!(p6, "Price Process")
xlabel!(p6, "Time (h)")
ylabel!(p6, L"P(t)")

ind = findall(P[2] .<= 3600*2)
p7 = plot(P[2][ind] .* (42/T), P[1][ind], linetype = :steppost, legend = :bottomright)
title!(p7, "Price Process")
xlabel!(p7, "Time (h)")
ylabel!(p7, L"P(t)")

p8 = plot(p6, p7, layout = (2,1))
# savefig(p8, "Plots/HawkesPrice.pdf")

## Calibration
T = 3600*18     # large enough to get good estimates, but not too long that it'll run for too long
t = simulateHawkes(lambda0, alpha, beta, T)

loglikeHawkes(t, lambda0, alpha, beta, T)

res = optimize(calibrateHawkes, [0.01, 0.015, 0.15])
par = Optim.minimizer(res)
    # par is very close to that used in simulation
